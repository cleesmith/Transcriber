Nice video, thanks, so I installed on a MacBook Pro M3 ...
pipx install insanely-fast-whisper
PYTORCH_ENABLE_MPS_FALLBACK=1

Since insanely-fast-whisper only does audio:
1. do/find a youtube video about whatever, or read a book/chapter then:

2. pip install pytube pydub
from pytube import YouTube
from pydub import AudioSegment
video_url = "some_video_on_youtube_with_subtitles"
yt = YouTube(video_url)
audio_stream = yt.streams.filter(only_audio=True).first()
audio_file = audio_stream.download(filename='audio')
audio = AudioSegment.from_file(audio_file)
audio.export("audio.mp3", format="mp3")

3. which yields: audio.mp3 so then do:
insanely-fast-whisper --file-name audio.mp3 --device-id mps --model-name openai/whisper-large-v3 --batch-size 4
... an 1+ hour audio (from the youtube video) took 4 mins 20 secs = wow!

4. which yields: output.json so then do:
python -B convert_output.py output.json -f txt -o .
... see:
https://github.com/Vaibhavs10/insanely-fast-whisper/blob/main/convert_output.py

5. yields: output.txt so the last step is:
paragraphs, how?, so ChatGPT 4o gave me this:

import re
import textwrap

def add_paragraphs(transcribed_text, sentences_per_paragraph=5, line_width=70):
    # normalize spaces
    transcribed_text = re.sub(r'\s+', ' ', transcribed_text).strip()
    
    # split the text into sentences, keeping the punctuation with the sentence
    sentence_endings = re.compile(r'(?<!\w\.\w.)(?<![A-Z][a-z]\.)(?<=\.|\?|\!)\s')
    sentences = sentence_endings.split(transcribed_text)

    paragraphs = []
    for i in range(0, len(sentences), sentences_per_paragraph):
        paragraph = ' '.join(sentences[i:i + sentences_per_paragraph]).strip()
        wrapped_paragraph = textwrap.fill(paragraph, width=line_width)
        paragraphs.append(wrapped_paragraph)

    formatted_text = '\n\n'.join(paragraphs)

    # ensure the last sentence has punctuation
    if not re.search(r'[.!?]$', formatted_text.strip()):
        formatted_text += '.'

    return formatted_text

with open('output.txt', 'r') as file:
    transcribed_text = file.read()

formatted_text = add_paragraphs(transcribed_text, sentences_per_paragraph=3, line_width=70)

with open('formatted_output.txt', 'w') as file:
    file.write(formatted_text)

print("Formatted text with paragraphs and line wrapping has been saved to 'formatted_output.txt'.")
... which is more readable, but not perfect.

